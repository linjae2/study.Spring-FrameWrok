server:
  port: ${PORT:8080}

spring:
  application.name: brave_zipkin_test
  zipking:
    base-url: http://172.31.37.55:9411
    enabled: true
    locator.discovery.enabled: true

  datasource:
    hikari:
      maximum-pool-size: 10
    url: jdbc:mariadb://172.31.37.55:3401/test?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: sdman
    password: snudh123
    driver-class-name: org.mariadb.jdbc.Driver

  redis:
    host: 172.31.37.55
    port: 6379

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        generate_statistics: true

management:
  endpoint:
    # 각각의 endpoint 마다 자세한 값을 보여줄 지 지정할 수 있다.
    health:
      show-details: always # default : never

  Endpoints:
    web:
      exposure:

        # 웹으로 노출하고 싶은 endpoint를 지정
        include: health, prometheus # default : health

      # 매트릭을 확인할 base-url을 지정
      base-path: /actuator          # default : /actuator

  tracing:
    enabled: true
    sampling.probability: 1.0
    propagation:         # 추적 정보 전파 방식 (wbc, b3, b3_multi)
      produce: b3_multi  # 추적 정보를 여러 개의 헤더로 나누어 전송
      consume: b3        # HTTP 헤더를 사용하여 추적 ID, 스팬 ID 등을 전달

  zipkin:
    tracing:
      endpoint: "http://172.31.37.55:9411/api/v2/spans"

logging:
#   level:
#     org:
#       hibernate:
#         stat: DEBUG
#         sql: debug
#         type:
#           descriptor:
#             sql: trace
#       springframework:
#         jdbc:
#           core:
#             JdbcTemplate: DEBUG
#             StatementCreatorUtils: TRACE

  pattern:
    console: "%5p [%X{traceId:-},%X{spanId:-}] - %msg%n"

  # register-shutdown-hook: false
  # config: classpath:./config/log4j2.xml
